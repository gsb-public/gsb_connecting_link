<?php

/**
 * @file
 * Provides a UI for creating connecting links.
 */

/**
 * Implements hook_menu().
 */
function gsb_connecting_link_menu() {
  $items = array();
  $items['admin/config/gsb/connecting-link'] = array(
    'title' => 'Connecting Links',
    'description' => 'Manage GSB connecting links.',
    'page callback' => 'gsb_connecting_link_overview',
    'access arguments' => array('administer connecting links'),
    'file' => 'gsb_connecting_link.admin.inc',
  );
  $items['admin/config/gsb/connecting-link/overview'] = array(
    'title' => 'Overview',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/gsb/connecting-link/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_connecting_link_settings_form'),
    'access arguments' => array('administer connecting links'),
    'file' => 'gsb_connecting_link.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/gsb/connecting-link/add'] = array(
    'title' => 'Add connecting link',
    'page callback' => 'gsb_connecting_link_add_page',
    'access arguments' => array('administer connecting links'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'gsb_connecting_link.admin.inc',
  );
  $items['admin/config/gsb/connecting-link/manage/%gsb_connecting_link/%'] = array(
    'title' => 'Edit connecting link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_connecting_link_form', 5),
    'load arguments' => array(6),
    'access arguments' => array('administer connecting links'),
    'file' => 'gsb_connecting_link.admin.inc',
  );
  $items['admin/config/gsb/connecting-link/manage/%gsb_connecting_link/%/delete'] = array(
    'title' => 'Delete connecting link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_connecting_link_delete_form', 5),
    'load arguments' => array(6),
    'access arguments' => array('administer connecting links'),
    'file' => 'gsb_connecting_link.admin.inc',
  );
  $items['library/articles/%/links/%gsb_connecting_link'] = array(
    'title' => 'Connecting...',
    'page callback' => 'gsb_connecting_link_redirect',
    'page arguments' => array(4),
    'load arguments' => array(2),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Menu load callback: Loads a single connecting link by its alias.
 *
 * @param string $alias
 *   The connecting link alias.
 * @param string $type
 *   The connecting link type.
 *
 * @return \GSBConnectingLink
 *   The connecting link object.
 */
function gsb_connecting_link_load($alias, $type) {
  return \GSBConnectingLink::loadByAlias($alias, $type);
}

/**
 * Implements hook_permission().
 */
function gsb_connecting_link_permission() {
  return array(
    'administer connecting links' =>  array(
      'title' => t('Administer connecting links'),
      'description' => t('Perform administration tasks on connecting links.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function gsb_connecting_link_theme($existing, $type, $theme, $path) {
  return array(
    'gsb_connecting_link_sponsor_message' => array(
      'variables' => array('message' => NULL, 'sponsor' => NULL),
    ),
  );
}

/**
 * Page callback: Builds the connecting link redirect page.
 *
 * @param \GSBConnectingLink $link
 *   The connecting link object.
 *
 * @return array
 *   The connecting link redirect page.
 */
function gsb_connecting_link_redirect(\GSBConnectingLink $link) {
  $build = array(
    '#theme' => 'gsb_connecting_link_sponsor_message',
    '#sponsor' => $link->getSponsor(),
  );
  $build['#attached']['js'][] = drupal_get_path('module', 'gsb_connecting_link') . '/gsb_connecting_link.js';
  $build['#attached']['js'][] = array(
    'type' => 'setting',
    'data' => array(
      'gsb_connecting_link' => array(
        'redirect_delay' => variable_get('gsb_connecting_link_redirect_delay', 3),
        'destination' => $link->destination,
      ),
    ),
  );
  return $build;
}

/**
 * Implements hook_preprocess_HOOK() for gsb_connecting_link_sponsor_message().
 */
function template_preprocess_gsb_connecting_link_sponsor_message(&$variables) {
  if (!isset($variables['message'])) {
    $variables['message'] = variable_get('gsb_connecting_link_sponsor_message', t('Paid and Licensed for you by'));
  }
}

/**
 * Returns HTML for the sponsor message.
 */
function theme_gsb_connecting_link_sponsor_message($variables) {
  $output = '';
  $output .= '<div class="sponsor-message">';
  $output .= '<span class="message">' . check_plain($variables['message']) . '</span>';
  $output .= ' ';
  $output .= '<span class="sponsor">' . check_plain($variables['sponsor']) . '</span>';
  $output .= '</div>';
  return $output;
}
